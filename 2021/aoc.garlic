
util = 
{
    binary_array_to_num = (binary)
    {
        result = 0
        base = 1        
        // todo - not sure how we should handle length/count in strings/arrays
        for (i = (binary.count - 1)) (i >= 0) (i--)
        {
            val = binary[i]
            if (val == "1")
            {
                result += base
            }
            base = (base * 2)
        }
 
        return = result
    }

    binary_str_to_num = (binary)
    {
        result = 0
        base = 1
        // todo - not sure how we should handle length/count in strings/arrays
        for (i = (binary.length - 1)) (i >= 0) (i--)
        {
            val = binary[i]
            if (val == "1")
            {
                result += base
            }
            base = (base * 2)
        }
 
        return = result
    }

    split = (str, delimitters)
    {
        items = { count = 0 }
        line = ""

        for (i = 0) (i < str.length) (i++)
        {
            c = str[i]
            is_split = false
            for (j = 0) (j < delimitters.length) (j++)
            {
                d = delimitters[j]
                if(c == d)
                {
                    is_split = true
                    // todo - add 'break' to garlic
                    j = delimitters.length 
                }
            }

            if(is_split)
            {
                if(line != "")
                {
                    items[items.count] = line
                    items.count++
                    line = ""
                }
            }
            else
            {
                line += c
            }   
        }

        // append final line
        if(line != "")
        {
            items[items.count] = line
            items.count++
            line = ""
        }

        return = items
    }

    read_file = (path)
    {
        file = std.load(path)
        lines = { count = 0 }
        line = ""

        // Create an array of lines by parsing each character and breaking on whitespace
        for (i = 0) (i < file.length) (i++)
        {
            c = file[i]

            // whitespace, new line
            if((c == "\n") || (c == "\r"))
            {
                if(line != "")
                {
                    lines[lines.count] = line
                    lines.count++
                    line = ""
                }
            }
            else
            {
                line += c
            }   
        }

        // append final line
        if(line != "")
        {
            lines[lines.count] = line
            lines.count++
            line = ""
        }

        return = lines
    }
}